{"version":3,"file":"static/js/41.3c36549e.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/pages/MovieDetails.jsx","components/services/Api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 16px;\n  display: flex;     \n`\n\nexport const InfoBox = styled.div`\n   padding: 0 32px; \n`","import React from 'react';\nimport { Container, InfoBox } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\n\nexport const MovieCard = ({\n  poster_path,\n  title,\n  vote_average,\n  overview,\n  genres,\n}) => {\n  return (\n    <Container>\n      <div>\n        <img src={poster_path} alt={title} width='360'/>\n      </div>\n      <InfoBox>\n        <h2>{title}</h2>\n        <p>\n          <b>User score:</b> {vote_average}\n        </p>\n        <p>\n          <b>Genres:</b> {genres}\n        </p>\n        <p>\n          <b>Overview:</b> {overview}\n        </p>       \n      </InfoBox>\n    </Container>\n  );\n};\n\nMovieCard.propTypes = {\n  poster_path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  overview: PropTypes.string,\n  genres: PropTypes.string.isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { ThreeDots } from 'react-loader-spinner';\nimport toast from 'react-hot-toast';\nimport { getMovieById } from 'components/services/Api';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  \n\n  useEffect(() => {\n    async function getMovieDitails() {\n      try {\n        const movieInfo = await getMovieById(movieId);\n        setMovie(movieInfo);\n      } catch (error) {\n        console.log(error);\n        toast.error('Ooops! Something went wrong. Try again.')\n      }\n    }\n\n    getMovieDitails();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const { poster_path, title, vote_average, overview, genres = [] } = movie;\n  const genresList = genres.map(genre => genre.name).join(', ');\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n  const altPosterUrl = `https://via.placeholder.com/360x540.png?text=${title}`;\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <HiArrowLeft size=\"16\" /> Go to back\n      </Link>\n      <MovieCard\n        poster_path={poster_path ? `${baseImgUrl}${poster_path}` : altPosterUrl}\n        title={title}\n        vote_average={vote_average}\n        overview={overview}\n        genres={genresList}\n      />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={ <ThreeDots color=\"red\" wrapperStyle={{ margin: 'auto' }} />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'f15e9a3194e113470990f4a0e5a9c33f';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nexport const getImageByQuery = async searchQuery => {\n  const config = {\n    baseURL,\n    params: {\n      api_key: KEY,\n      language: 'en-uk',\n      query: searchQuery,\n    },\n  };\n\n  const response = await axios.get(`search/movie`, config);\n  const data = await response.data;\n  \n  return data.results;\n};\n\nconst config = {\n  baseURL,   \n  params: {\n    api_key: KEY,\n    language: 'en-uk',\n  },\n};\n\nexport const getTrendingMovies = async () => {  \n\n  const response = await axios.get('/trending/movie/day', config);\n  const data = await response.data;  \n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  \n  const response = await axios.get(`/movie/${id}`, config);\n  const data = await response.data;  \n  return data;\n};\n\nexport const getMovieAddInfo = async (id, option) => {\n  \n  const response = await axios.get(`/movie/${id}/${option}`, config);\n  const data = await response.data;  \n  return data;\n};\n"],"names":["Container","styled","InfoBox","MovieCard","poster_path","title","vote_average","overview","genres","src","alt","width","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getMovieById","movieInfo","console","log","toast","getMovieDitails","genresList","map","genre","name","join","altPosterUrl","to","state","from","size","Suspense","fallback","color","wrapperStyle","margin","KEY","baseURL","getImageByQuery","searchQuery","config","params","api_key","language","query","axios","response","data","results","getTrendingMovies","id","getMovieAddInfo","option"],"sourceRoot":""}