{"version":3,"file":"static/js/681.73992ee0.chunk.js","mappings":"+NAkDA,UA7CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAgBN,EAAS,WAFpD,OAEUO,EAFV,OAGIH,EAAgBG,EAASC,SAH7B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,IAECG,EAGL,OACE,iCACE,wBAC2B,IAAxBA,EAAaS,OACV,UACA,8CAEN,wBACGT,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAChB,2BACE,0BACE,oCACCD,MAEH,uBAAIC,MALGD,EADO,QAYzB,C,2KC1CKE,EAAM,mCACNC,EAAU,+BAEHC,EAAe,mCAAG,WAAMC,GAAN,kFACvBC,EAAS,CACbH,QAAAA,EACAI,OAAQ,CACNC,QAASN,EACTO,SAAU,QACVC,MAAOL,IANkB,SAUNM,EAAAA,GAAAA,IAAA,eAA0BL,GAVpB,cAUvBb,EAVuB,gBAWVA,EAASmB,KAXC,cAWvBA,EAXuB,yBAatBA,EAAKlB,SAbiB,2CAAH,sDAgBtBY,EAAS,CACbH,QAAAA,EACAI,OAAQ,CACNC,QAASN,EACTO,SAAU,UAIDI,EAAiB,mCAAG,sGAERF,EAAAA,GAAAA,IAAU,sBAAuBL,GAFzB,cAEzBb,EAFyB,gBAGZA,EAASmB,KAHG,cAGzBA,EAHyB,yBAIxBA,EAAKlB,SAJmB,2CAAH,qDAOjBoB,EAAY,mCAAG,WAAMC,GAAN,yFAEHJ,EAAAA,GAAAA,IAAA,iBAAoBI,GAAMT,GAFvB,cAEpBb,EAFoB,gBAGPA,EAASmB,KAHF,cAGpBA,EAHoB,yBAInBA,GAJmB,2CAAH,sDAOZpB,EAAe,mCAAG,WAAOuB,EAAIC,GAAX,yFAENL,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,YAA0BC,GAAUV,GAF9B,cAEvBb,EAFuB,gBAGVA,EAASmB,KAHC,cAGvBA,EAHuB,yBAItBA,GAJsB,2CAAH,uD","sources":["components/Reviews.jsx","components/services/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieAddInfo } from 'components/services/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReveiws, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    async function getReviewsInfo() {\n      try {\n        const response = await getMovieAddInfo(movieId, 'reviews');\n        setMovieReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviewsInfo();\n  }, [movieId]);\n\n  if (!movieReveiws) {\n    return;\n  }\n  return (\n    <>\n      <h2>\n        {movieReveiws.length !== 0\n          ? 'Reviews'\n          : \"We don't have any review for this movie.\"}\n      </h2>\n      <ul>\n        {movieReveiws.map(({ author, content }) => (\n          <li key={author}>\n            <p>\n              <b>Author: </b>\n              {author}\n            </p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nReviews.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,  \n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'f15e9a3194e113470990f4a0e5a9c33f';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nexport const getImageByQuery = async searchQuery => {\n  const config = {\n    baseURL,\n    params: {\n      api_key: KEY,\n      language: 'en-uk',\n      query: searchQuery,\n    },\n  };\n\n  const response = await axios.get(`search/movie`, config);\n  const data = await response.data;\n  \n  return data.results;\n};\n\nconst config = {\n  baseURL,   \n  params: {\n    api_key: KEY,\n    language: 'en-uk',\n  },\n};\n\nexport const getTrendingMovies = async () => {  \n\n  const response = await axios.get('/trending/movie/day', config);\n  const data = await response.data;  \n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  \n  const response = await axios.get(`/movie/${id}`, config);\n  const data = await response.data;  \n  return data;\n};\n\nexport const getMovieAddInfo = async (id, option) => {\n  \n  const response = await axios.get(`/movie/${id}/${option}`, config);\n  const data = await response.data;  \n  return data;\n};\n"],"names":["movieId","useParams","useState","movieReveiws","setMovieReviews","useEffect","getMovieAddInfo","response","results","console","log","getReviewsInfo","length","map","author","content","KEY","baseURL","getImageByQuery","searchQuery","config","params","api_key","language","query","axios","data","getTrendingMovies","getMovieById","id","option"],"sourceRoot":""}