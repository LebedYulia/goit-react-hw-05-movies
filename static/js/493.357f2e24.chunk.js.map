{"version":3,"file":"static/js/493.357f2e24.chunk.js","mappings":"gNAGaA,EAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACzBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAS,CAACC,KAAMJ,GAA3C,UACE,wBAAKD,KAGV,C,mICqBA,UA3Ba,WACZ,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE6BC,EAAAA,EAAAA,MAF7B,OAEUC,EAFV,OAGIH,GAAU,OAAIG,IAHlB,gDAKIC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,2CANhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,KAGD,iCACE,4CACA,wBACGR,EAAOS,KAAI,gBAAGjB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,IAAD,CAAqBA,MAAOA,EAAOD,GAAIA,GAAtBA,EADP,QAMnB,C,2KC7BKkB,EAAM,mCACNC,EAAU,+BAEVC,EAAS,CACbD,QAAAA,EACAE,OAAQ,CACNC,QAASJ,EACTK,SAAU,UAIDZ,EAAiB,mCAAG,sGAERa,EAAAA,GAAAA,IAAU,sBAAuBJ,GAFzB,cAEzBK,EAFyB,gBAGZA,EAASC,KAHG,cAGzBA,EAHyB,yBAIxBA,EAAKC,SAJmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAM5B,GAAN,yFAEHwB,EAAAA,GAAAA,IAAA,iBAAoBxB,GAAMoB,GAFvB,cAEpBK,EAFoB,gBAGPA,EAASC,KAHF,cAGpBA,EAHoB,yBAInBA,GAJmB,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,kFACvBV,EAAS,CACbD,QAAAA,EACAE,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVQ,MAAOD,IANkB,SAUNN,EAAAA,GAAAA,IAAA,eAA0BJ,GAVpB,cAUvBK,EAVuB,gBAWVA,EAASC,KAXC,cAWvBA,EAXuB,OAY7Bb,QAAQC,IAAIY,GAZiB,kBAatBA,EAAKC,SAbiB,2CAAH,sDAgBfK,EAAe,mCAAG,WAAOhC,EAAIiC,GAAX,yFAENT,EAAAA,GAAAA,IAAA,iBAAoBxB,EAApB,YAA0BiC,GAAUb,GAF9B,cAEvBK,EAFuB,gBAGVA,EAASC,KAHC,cAGvBA,EAHuB,yBAItBA,GAJsB,2CAAH,uD","sources":["components/MoviesList.jsx","components/pages/Home.jsx","components/services/Api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ id, title }) => {\n  const location = useLocation();\n \n  return (\n    <Link to={`/movies/${id}`} state = {{from: location}}>\n      <li>{title}</li>\n    </Link>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { getTrendingMovies } from 'components/services/Api';\nimport { MoviesList } from 'components/MoviesList';\n\n const Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMoviesList() {\n      try {\n        const moviesList = await getTrendingMovies();        \n        setMovies([...moviesList]);\n      } catch (error) {\n        console.log(error);\n        toast.error('Ooops! Something went wrong. Try again.')\n      }\n    }\n    getMoviesList();    \n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <MoviesList key={id} title={title} id={id}/>\n        ))}\n      </ul>\n    </>\n  );\n};\n export default Home;","import axios from 'axios';\n\nconst KEY = 'f15e9a3194e113470990f4a0e5a9c33f';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nconst config = {\n  baseURL,   \n  params: {\n    api_key: KEY,\n    language: 'en-uk',\n  },\n};\n\nexport const getTrendingMovies = async () => {  \n\n  const response = await axios.get('/trending/movie/day', config);\n  const data = await response.data;  \n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  \n  const response = await axios.get(`/movie/${id}`, config);\n  const data = await response.data;  \n  return data;\n};\n\nexport const getImageByQuery = async searchQuery => {\n  const config = {\n    baseURL,\n    params: {\n      api_key: KEY,\n      language: 'en-uk',\n      query: searchQuery,\n    },\n  };\n\n  const response = await axios.get(`search/movie`, config);\n  const data = await response.data;\n  console.log(data);\n  return data.results;\n};\n\nexport const getMovieAddInfo = async (id, option) => {\n  \n  const response = await axios.get(`/movie/${id}/${option}`, config);\n  const data = await response.data;  \n  return data;\n};\n"],"names":["MoviesList","id","title","location","useLocation","to","state","from","useState","movies","setMovies","useEffect","getTrendingMovies","moviesList","console","log","toast","getMoviesList","map","KEY","baseURL","config","params","api_key","language","axios","response","data","results","getMovieById","getImageByQuery","searchQuery","query","getMovieAddInfo","option"],"sourceRoot":""}